<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context          
       http://www.springframework.org/schema/context/spring-context.xsd
       ">
    <context:component-scan base-package="org.igov.io.db.kv.temp" />
	
    <beans profile="prod">
        <bean id="redisProps"
                  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location" value="file:${catalina.home}/conf/redisProps.properties" />
            <property name="ignoreUnresolvablePlaceholders" value="true" />
        </bean>

        <bean id="stringRedisSerializer"
                  class="org.springframework.data.redis.serializer.StringRedisSerializer" />

        <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
            <property name="maxTotal" value="${redis.maxActive}" />
            <property name="maxIdle" value="${redis.maxIdle}" />
            <property name="minIdle" value="${redis.minIdle}" />
            <property name="testOnBorrow" value="${redis.testOnBorrow}" />
            <property name="testOnReturn" value="${redis.testOnReturn}" />
            <property name="testWhileIdle" value="${redis.testWhileIdle}" />
            <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
            <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
            <property name="maxWaitMillis" value="${redis.maxWait}" />
        </bean>

        <bean id="jedisFactory"
                  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
                  destroy-method="destroy">
            <property name="hostName" value="${redis.host}" />
            <property name="port" value="${redis.port}" />
            <property name="timeout" value="5000" />
            <property name="password" value="${redis.password}" />
            <property name="poolConfig" ref="jedisPoolConfig" />
        </bean>

        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
            <property name="connectionFactory" ref="jedisFactory" />
        </bean>

        <bean id="redisService" class="org.igov.io.db.kv.temp.impl.BytesDataInmemoryStorage">
        </bean>
    </beans>
	
	
    <beans profile="test">
        <bean id="redisProps"
                  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location" value="file:${catalina.home}/conf/redisProps.properties" />
            <property name="ignoreUnresolvablePlaceholders" value="true" />
        </bean>

        <bean id="stringRedisSerializer"
                  class="org.springframework.data.redis.serializer.StringRedisSerializer" />

        <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
            <property name="maxTotal" value="${redis.maxActive}" />
            <property name="maxIdle" value="${redis.maxIdle}" />
            <property name="minIdle" value="${redis.minIdle}" />
            <property name="testOnBorrow" value="${redis.testOnBorrow}" />
            <property name="testOnReturn" value="${redis.testOnReturn}" />
            <property name="testWhileIdle" value="${redis.testWhileIdle}" />
            <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
            <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
            <property name="maxWaitMillis" value="${redis.maxWait}" />
        </bean>

        <bean id="jedisFactory"
                  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
                  destroy-method="destroy">
            <property name="hostName" value="${redis.host}" />
            <property name="port" value="${redis.port}" />
            <property name="timeout" value="5000" />
            <property name="password" value="${redis.password}" />
            <property name="poolConfig" ref="jedisPoolConfig" />
        </bean>

        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
            <property name="connectionFactory" ref="jedisFactory" />
        </bean>

        <bean id="redisService" class="org.igov.io.db.kv.temp.impl.BytesDataInmemoryStorage">
        </bean>
    </beans>
        
                        
        
    <beans profile="local,default">
        <bean id="redisProps"
                  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location" value="classpath:redisProps.properties" />
            <property name="ignoreUnresolvablePlaceholders" value="true" />
        </bean>

        <bean id="stringRedisSerializer"
                  class="org.springframework.data.redis.serializer.StringRedisSerializer" />

        <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
            <property name="maxTotal" value="${redis.maxActive}" />
            <property name="maxIdle" value="${redis.maxIdle}" />
            <property name="minIdle" value="${redis.minIdle}" />
            <property name="testOnBorrow" value="${redis.testOnBorrow}" />
            <property name="testOnReturn" value="${redis.testOnReturn}" />
            <property name="testWhileIdle" value="${redis.testWhileIdle}" />
            <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
            <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
            <property name="maxWaitMillis" value="${redis.maxWait}" />
        </bean>

        <bean id="jedisFactory"
                  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
                  destroy-method="destroy">
            <property name="hostName" value="${redis.host}" />
            <property name="port" value="${redis.port}" />
            <property name="timeout" value="5000" />
            <property name="password" value="${redis.password}" />
            <property name="poolConfig" ref="jedisPoolConfig" />
        </bean>

        <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
            <property name="connectionFactory" ref="jedisFactory" />
        </bean>

        <bean id="redisService" class="org.igov.io.db.kv.temp.impl.BytesDataInmemoryStorage">
        </bean>
    </beans>
</beans>
